# Makefile.in generated by automake 1.15 from Makefile.am.
# src/plugin/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/dmtcp
pkgincludedir = $(includedir)/dmtcp
pkglibdir = $(libdir)/dmtcp
pkglibexecdir = $(libexecdir)/dmtcp
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = $(d_bindir)/dmtcp_ssh$(EXEEXT) \
	$(d_bindir)/dmtcp_sshd$(EXEEXT)
libdmtcp_PROGRAMS = $(d_libdir)/libdmtcp_alloc.so$(EXEEXT) \
	$(d_libdir)/libdmtcp_dl.so$(EXEEXT) \
	$(d_libdir)/libdmtcp_ipc.so$(EXEEXT) \
	$(d_libdir)/libdmtcp_pid.so$(EXEEXT) \
	$(d_libdir)/libdmtcp_svipc.so$(EXEEXT) \
	$(d_libdir)/libdmtcp_timer.so$(EXEEXT)
subdir = src/plugin
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_bin_SCRIPTS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libssh_a_AR = $(AR) $(ARFLAGS)
libssh_a_LIBADD =
am_libssh_a_OBJECTS = i-util_ssh.$(OBJEXT)
libssh_a_OBJECTS = $(am_libssh_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdmtcpdir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS) $(libdmtcp_PROGRAMS)
am___d_bindir__dmtcp_ssh_OBJECTS = i-dmtcp_ssh.$(OBJEXT)
__d_bindir__dmtcp_ssh_OBJECTS = $(am___d_bindir__dmtcp_ssh_OBJECTS)
am__DEPENDENCIES_1 =
__d_bindir__dmtcp_ssh_DEPENDENCIES = libssh.a $(am__DEPENDENCIES_1)
am__dirstamp = $(am__leading_dot)dirstamp
am___d_bindir__dmtcp_sshd_OBJECTS = i-dmtcp_sshd.$(OBJEXT)
__d_bindir__dmtcp_sshd_OBJECTS = $(am___d_bindir__dmtcp_sshd_OBJECTS)
__d_bindir__dmtcp_sshd_DEPENDENCIES = libssh.a $(am__DEPENDENCIES_1)
am___d_libdir__libdmtcp_alloc_so_OBJECTS = mallocwrappers.$(OBJEXT) \
	mmapwrappers.$(OBJEXT)
__d_libdir__libdmtcp_alloc_so_OBJECTS =  \
	$(am___d_libdir__libdmtcp_alloc_so_OBJECTS)
__d_libdir__libdmtcp_alloc_so_DEPENDENCIES = $(am__DEPENDENCIES_1)
__d_libdir__libdmtcp_alloc_so_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(__d_libdir__libdmtcp_alloc_so_LDFLAGS) \
	$(LDFLAGS) -o $@
am___d_libdir__libdmtcp_dl_so_OBJECTS = dlwrappers.$(OBJEXT)
__d_libdir__libdmtcp_dl_so_OBJECTS =  \
	$(am___d_libdir__libdmtcp_dl_so_OBJECTS)
__d_libdir__libdmtcp_dl_so_DEPENDENCIES = $(am__DEPENDENCIES_1)
__d_libdir__libdmtcp_dl_so_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(__d_libdir__libdmtcp_dl_so_LDFLAGS) $(LDFLAGS) -o $@
am___d_libdir__libdmtcp_ipc_so_OBJECTS = i-connection.$(OBJEXT) \
	i-connectionidentifier.$(OBJEXT) i-connectionlist.$(OBJEXT) \
	i-ipc.$(OBJEXT) i-eventconnection.$(OBJEXT) \
	i-eventconnlist.$(OBJEXT) i-eventwrappers.$(OBJEXT) \
	i-util_descriptor.$(OBJEXT) i-fileconnection.$(OBJEXT) \
	i-fileconnlist.$(OBJEXT) i-filewrappers.$(OBJEXT) \
	i-posixipcwrappers.$(OBJEXT) i-connectionrewirer.$(OBJEXT) \
	i-kernelbufferdrainer.$(OBJEXT) i-socketconnection.$(OBJEXT) \
	i-socketconnlist.$(OBJEXT) i-socketwrappers.$(OBJEXT) \
	i-ssh.$(OBJEXT) i-sshdrainer.$(OBJEXT)
__d_libdir__libdmtcp_ipc_so_OBJECTS =  \
	$(am___d_libdir__libdmtcp_ipc_so_OBJECTS)
__d_libdir__libdmtcp_ipc_so_DEPENDENCIES = $(am__DEPENDENCIES_1)
__d_libdir__libdmtcp_ipc_so_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(__d_libdir__libdmtcp_ipc_so_LDFLAGS) $(LDFLAGS) -o $@
am___d_libdir__libdmtcp_pid_so_OBJECTS = pid.$(OBJEXT) \
	pid_filewrappers.$(OBJEXT) pid_miscwrappers.$(OBJEXT) \
	pid_syscallsreal.$(OBJEXT) pidwrappers.$(OBJEXT) \
	sched_wrappers.$(OBJEXT) virtualpidtable.$(OBJEXT)
__d_libdir__libdmtcp_pid_so_OBJECTS =  \
	$(am___d_libdir__libdmtcp_pid_so_OBJECTS)
__d_libdir__libdmtcp_pid_so_LDADD = $(LDADD)
__d_libdir__libdmtcp_pid_so_DEPENDENCIES =
__d_libdir__libdmtcp_pid_so_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(__d_libdir__libdmtcp_pid_so_LDFLAGS) $(LDFLAGS) -o $@
am___d_libdir__libdmtcp_svipc_so_OBJECTS = sysvipc.$(OBJEXT) \
	sysvipcwrappers.$(OBJEXT)
__d_libdir__libdmtcp_svipc_so_OBJECTS =  \
	$(am___d_libdir__libdmtcp_svipc_so_OBJECTS)
__d_libdir__libdmtcp_svipc_so_LDADD = $(LDADD)
__d_libdir__libdmtcp_svipc_so_DEPENDENCIES =
__d_libdir__libdmtcp_svipc_so_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(__d_libdir__libdmtcp_svipc_so_LDFLAGS) \
	$(LDFLAGS) -o $@
am___d_libdir__libdmtcp_timer_so_OBJECTS = timer_create.$(OBJEXT) \
	timerlist.$(OBJEXT) timerwrappers.$(OBJEXT)
__d_libdir__libdmtcp_timer_so_OBJECTS =  \
	$(am___d_libdir__libdmtcp_timer_so_OBJECTS)
__d_libdir__libdmtcp_timer_so_LDADD = $(LDADD)
__d_libdir__libdmtcp_timer_so_DEPENDENCIES =
__d_libdir__libdmtcp_timer_so_LINK = $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(__d_libdir__libdmtcp_timer_so_LDFLAGS) \
	$(LDFLAGS) -o $@
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(bin_SCRIPTS) $(dist_bin_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libssh_a_SOURCES) $(__d_bindir__dmtcp_ssh_SOURCES) \
	$(__d_bindir__dmtcp_sshd_SOURCES) \
	$(__d_libdir__libdmtcp_alloc_so_SOURCES) \
	$(__d_libdir__libdmtcp_dl_so_SOURCES) \
	$(__d_libdir__libdmtcp_ipc_so_SOURCES) \
	$(__d_libdir__libdmtcp_pid_so_SOURCES) \
	$(__d_libdir__libdmtcp_svipc_so_SOURCES) \
	$(__d_libdir__libdmtcp_timer_so_SOURCES)
DIST_SOURCES = $(libssh_a_SOURCES) $(__d_bindir__dmtcp_ssh_SOURCES) \
	$(__d_bindir__dmtcp_sshd_SOURCES) \
	$(__d_libdir__libdmtcp_alloc_so_SOURCES) \
	$(__d_libdir__libdmtcp_dl_so_SOURCES) \
	$(__d_libdir__libdmtcp_ipc_so_SOURCES) \
	$(__d_libdir__libdmtcp_pid_so_SOURCES) \
	$(__d_libdir__libdmtcp_svipc_so_SOURCES) \
	$(__d_libdir__libdmtcp_timer_so_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
AARCH64_HOST = no
ACLOCAL = ${SHELL} /home/qr719830/git/dmtcp/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/qr719830/git/dmtcp/missing autoconf
AUTOHEADER = ${SHELL} /home/qr719830/git/dmtcp/missing autoheader
AUTOMAKE = ${SHELL} /home/qr719830/git/dmtcp/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CILKC = no
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEBUG = no
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = 
EXEEXT = 
FAST_RESTART = no
GCL = no
GREP = 
HAS_CILK = no
HAS_CMA = yes
HAS_CPP = yes
HAS_DASH = yes
HAS_EMACS = no
HAS_EMACS_NOX = no
HAS_GCL = no
HAS_GDB = no
HAS_GZIP = yes
HAS_JAVA = no
HAS_JAVAC = no
HAS_MATLAB = no
HAS_MPICH = no
HAS_OPENMPI = yes
HAS_PS = yes
HAS_PYTHON = yes
HAS_READLINE = no
HAS_SCREEN = yes
HAS_SCRIPT = yes
HAS_SSH = no
HAS_STRACE = yes
HAS_TCSH = no
HAS_VIM = yes
HAS_ZSH = no
HBICT_DELTACOMP = no
INFINIBAND_SUPPORT = no
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LN_S = ln -s
LTLIBOBJS = 
M32 = 0
MAINT = #
MAKEINFO = ${SHELL} /home/qr719830/git/dmtcp/missing makeinfo
MATLAB = no
MKDIR_P = /bin/mkdir -p
MPICH_MPD = 
MPICH_MPDALLEXIT = 
MPICH_MPDBOOT = 
MPICH_MPDCLEANUP = 
MPICH_MPICC = 
MPICH_MPIEXEC = 
OBJEXT = o
OPENMPI_MPICC = /usr/bin/mpicc.openmpi
OPENMPI_MPIRUN = /usr/bin/mpirun.openmpi
OPENMP_CFLAGS = -fopenmp
OPENMP_CXXFLAGS = -fopenmp
PACKAGE = dmtcp
PACKAGE_BUGREPORT = dmtcp-forum@lists.sourceforge.net
PACKAGE_NAME = DMTCP
PACKAGE_STRING = DMTCP 2.4.4
PACKAGE_TARNAME = dmtcp
PACKAGE_URL = http://dmtcp.sourceforge.net
PACKAGE_VERSION = 2.4.4
PATH_SEPARATOR = :
RANLIB = ranlib
SCREEN = /usr/bin/screen
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
TEST_POSIX_MQ = yes
USE_TEST_SUITE = yes
VERSION = 2.4.4
VIM = /usr/bin/vim
abs_builddir = /home/qr719830/git/dmtcp/src/plugin
abs_srcdir = /home/qr719830/git/dmtcp/src/plugin
abs_top_builddir = /home/qr719830/git/dmtcp
abs_top_srcdir = /home/qr719830/git/dmtcp
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/qr719830/git/dmtcp/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..

# not a GNU package. You can remove this line, if
# have all needed files, that a GNU package needs
AUTOMAKE_OPTIONS = foreign
PICFLAGS = -fPIC
AM_CFLAGS = $(PICFLAGS)
AM_CXXFLAGS = $(PICFLAGS)
AM_LDFLAGS = $(PICFLAGS)
d_libdir = $(top_builddir)/lib/$(PACKAGE)
#d_libdir = $(top_builddir)/lib/$(PACKAGE)/32/lib/$(PACKAGE)
d_bindir = $(top_builddir)/bin
#d_bindir = $(top_builddir)/lib/$(PACKAGE)/32/bin

#HEADERS
#set the include path found by configure
AM_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/jalib
dmtcp_ldflags = -shared -Xlinker -znow -Wl,--unresolved-symbols=ignore-all
LDADD = -ldl -lpthread
libdmtcpdir = $(pkglibdir)
bin_SCRIPTS = 
CLEANFILES = 
dist_bin_SCRIPTS = 

#
# IPC plugin
# TODO(kapil): Split SSH plugin into its own.
#
noinst_LIBRARIES = libssh.a
__d_libdir__libdmtcp_alloc_so_SOURCES = \
	alloc/alloc.h                                                  \
	alloc/mallocwrappers.cpp                                       \
	alloc/mmapwrappers.cpp

__d_libdir__libdmtcp_alloc_so_LDFLAGS = $(dmtcp_ldflags)
__d_libdir__libdmtcp_alloc_so_LDADD = $(LDADD)
__d_libdir__libdmtcp_dl_so_SOURCES = \
	dl/dlwrappers.cpp

__d_libdir__libdmtcp_dl_so_LDFLAGS = $(dmtcp_ldflags)
__d_libdir__libdmtcp_dl_so_LDADD = $(LDADD)
libssh_a_SOURCES = \
	ipc/ssh/util_ssh.cpp                                           \
	ipc/ssh/util_ssh.h

libssh_a_CPPFLAGS = $(AM_CPPFLAGS) -I$(srcdir)/ipc
libssh_a_SHORTNAME = i
__d_libdir__libdmtcp_ipc_so_SOURCES = \
	ipc/connection.cpp                                             \
	ipc/connection.h                                               \
	ipc/connectionidentifier.cpp                                   \
	ipc/connectionidentifier.h                                     \
	ipc/connectionlist.cpp                                         \
	ipc/connectionlist.h                                           \
	ipc/ipc.cpp                                                    \
	ipc/ipc.h                                                      \
	ipc/event/eventconnection.cpp                                  \
	ipc/event/eventconnection.h                                    \
	ipc/event/eventconnlist.cpp                                    \
	ipc/event/eventconnlist.h                                      \
	ipc/event/eventwrappers.cpp                                    \
	ipc/event/eventwrappers.h                                      \
	ipc/event/util_descriptor.cpp                                  \
	ipc/event/util_descriptor.h                                    \
	ipc/file/fileconnection.cpp                                    \
	ipc/file/fileconnection.h                                      \
	ipc/file/fileconnlist.cpp                                      \
	ipc/file/fileconnlist.h                                        \
	ipc/file/filewrappers.cpp                                      \
	ipc/file/filewrappers.h                                        \
	ipc/file/posixipcwrappers.cpp                                  \
	ipc/socket/connectionrewirer.cpp                               \
	ipc/socket/connectionrewirer.h                                 \
	ipc/socket/kernelbufferdrainer.cpp                             \
	ipc/socket/kernelbufferdrainer.h                               \
	ipc/socket/socketconnection.cpp                                \
	ipc/socket/socketconnection.h                                  \
	ipc/socket/socketconnlist.cpp                                  \
	ipc/socket/socketconnlist.h                                    \
	ipc/socket/socketwrappers.cpp                                  \
	ipc/socket/socketwrappers.h                                    \
	ipc/ssh/ssh.cpp                                                \
	ipc/ssh/sshdrainer.cpp                                         \
	ipc/ssh/sshdrainer.h                                           \
	ipc/ssh/ssh.h

__d_libdir__libdmtcp_ipc_so_CPPFLAGS = $(AM_CPPFLAGS) -I$(srcdir)/ipc
__d_libdir__libdmtcp_ipc_so_LDFLAGS = $(dmtcp_ldflags)
__d_libdir__libdmtcp_ipc_so_LDADD = $(LDADD) -lrt
__d_libdir__libdmtcp_ipc_so_SHORTNAME = i
__d_bindir__dmtcp_ssh_SOURCES = \
	ipc/ssh/dmtcp_ssh.cpp

__d_bindir__dmtcp_ssh_CPPFLAGS = $(AM_CPPFLAGS) -I$(srcdir)/ipc
__d_bindir__dmtcp_ssh_LDADD = libssh.a $(LDADD)
__d_bindir__dmtcp_ssh_SHORTNAME = i
__d_bindir__dmtcp_sshd_SOURCES = \
	ipc/ssh/dmtcp_sshd.cpp

__d_bindir__dmtcp_sshd_CPPFLAGS = $(AM_CPPFLAGS) -I$(srcdir)/ipc
__d_bindir__dmtcp_sshd_LDADD = libssh.a $(LDADD)
__d_bindir__dmtcp_sshd_SHORTNAME = i
__d_libdir__libdmtcp_pid_so_SOURCES = \
	pid/pid.cpp                                                    \
	pid/pid_filewrappers.cpp                                       \
	pid/pid.h                                                      \
	pid/pid_miscwrappers.cpp                                       \
	pid/pid_syscallsreal.c                                         \
	pid/pidwrappers.cpp                                            \
	pid/pidwrappers.h                                              \
	pid/sched_wrappers.cpp                                         \
	pid/virtualpidtable.cpp                                        \
	pid/virtualpidtable.h

__d_libdir__libdmtcp_pid_so_LDFLAGS = $(dmtcp_ldflags)
__d_libdir__libdmtcp_svipc_so_SOURCES = \
	svipc/sysvipc.cpp                                              \
	svipc/sysvipc.h                                                \
	svipc/sysvipcwrappers.cpp                                      \
	svipc/sysvipcwrappers.h

__d_libdir__libdmtcp_svipc_so_LDFLAGS = $(dmtcp_ldflags)
__d_libdir__libdmtcp_timer_so_SOURCES = \
	timer/timer_create.cpp                                         \
	timer/timerlist.cpp                                            \
	timer/timerlist.h                                              \
	timer/timerwrappers.cpp                                        \
	timer/timerwrappers.h

__d_libdir__libdmtcp_timer_so_LDFLAGS = $(dmtcp_ldflags)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/plugin/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/plugin/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libssh.a: $(libssh_a_OBJECTS) $(libssh_a_DEPENDENCIES) $(EXTRA_libssh_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libssh.a
	$(AM_V_AR)$(libssh_a_AR) libssh.a $(libssh_a_OBJECTS) $(libssh_a_LIBADD)
	$(AM_V_at)$(RANLIB) libssh.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
install-libdmtcpPROGRAMS: $(libdmtcp_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(libdmtcp_PROGRAMS)'; test -n "$(libdmtcpdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdmtcpdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdmtcpdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(libdmtcpdir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(libdmtcpdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-libdmtcpPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(libdmtcp_PROGRAMS)'; test -n "$(libdmtcpdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libdmtcpdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libdmtcpdir)" && rm -f $$files

clean-libdmtcpPROGRAMS:
	-test -z "$(libdmtcp_PROGRAMS)" || rm -f $(libdmtcp_PROGRAMS)
$(d_bindir)/$(am__dirstamp):
	@$(MKDIR_P) $(d_bindir)
	@: > $(d_bindir)/$(am__dirstamp)

$(d_bindir)/dmtcp_ssh$(EXEEXT): $(__d_bindir__dmtcp_ssh_OBJECTS) $(__d_bindir__dmtcp_ssh_DEPENDENCIES) $(EXTRA___d_bindir__dmtcp_ssh_DEPENDENCIES) $(d_bindir)/$(am__dirstamp)
	@rm -f $(d_bindir)/dmtcp_ssh$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(__d_bindir__dmtcp_ssh_OBJECTS) $(__d_bindir__dmtcp_ssh_LDADD) $(LIBS)

$(d_bindir)/dmtcp_sshd$(EXEEXT): $(__d_bindir__dmtcp_sshd_OBJECTS) $(__d_bindir__dmtcp_sshd_DEPENDENCIES) $(EXTRA___d_bindir__dmtcp_sshd_DEPENDENCIES) $(d_bindir)/$(am__dirstamp)
	@rm -f $(d_bindir)/dmtcp_sshd$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(__d_bindir__dmtcp_sshd_OBJECTS) $(__d_bindir__dmtcp_sshd_LDADD) $(LIBS)
$(d_libdir)/$(am__dirstamp):
	@$(MKDIR_P) $(d_libdir)
	@: > $(d_libdir)/$(am__dirstamp)

$(d_libdir)/libdmtcp_alloc.so$(EXEEXT): $(__d_libdir__libdmtcp_alloc_so_OBJECTS) $(__d_libdir__libdmtcp_alloc_so_DEPENDENCIES) $(EXTRA___d_libdir__libdmtcp_alloc_so_DEPENDENCIES) $(d_libdir)/$(am__dirstamp)
	@rm -f $(d_libdir)/libdmtcp_alloc.so$(EXEEXT)
	$(AM_V_CXXLD)$(__d_libdir__libdmtcp_alloc_so_LINK) $(__d_libdir__libdmtcp_alloc_so_OBJECTS) $(__d_libdir__libdmtcp_alloc_so_LDADD) $(LIBS)

$(d_libdir)/libdmtcp_dl.so$(EXEEXT): $(__d_libdir__libdmtcp_dl_so_OBJECTS) $(__d_libdir__libdmtcp_dl_so_DEPENDENCIES) $(EXTRA___d_libdir__libdmtcp_dl_so_DEPENDENCIES) $(d_libdir)/$(am__dirstamp)
	@rm -f $(d_libdir)/libdmtcp_dl.so$(EXEEXT)
	$(AM_V_CXXLD)$(__d_libdir__libdmtcp_dl_so_LINK) $(__d_libdir__libdmtcp_dl_so_OBJECTS) $(__d_libdir__libdmtcp_dl_so_LDADD) $(LIBS)

$(d_libdir)/libdmtcp_ipc.so$(EXEEXT): $(__d_libdir__libdmtcp_ipc_so_OBJECTS) $(__d_libdir__libdmtcp_ipc_so_DEPENDENCIES) $(EXTRA___d_libdir__libdmtcp_ipc_so_DEPENDENCIES) $(d_libdir)/$(am__dirstamp)
	@rm -f $(d_libdir)/libdmtcp_ipc.so$(EXEEXT)
	$(AM_V_CXXLD)$(__d_libdir__libdmtcp_ipc_so_LINK) $(__d_libdir__libdmtcp_ipc_so_OBJECTS) $(__d_libdir__libdmtcp_ipc_so_LDADD) $(LIBS)

$(d_libdir)/libdmtcp_pid.so$(EXEEXT): $(__d_libdir__libdmtcp_pid_so_OBJECTS) $(__d_libdir__libdmtcp_pid_so_DEPENDENCIES) $(EXTRA___d_libdir__libdmtcp_pid_so_DEPENDENCIES) $(d_libdir)/$(am__dirstamp)
	@rm -f $(d_libdir)/libdmtcp_pid.so$(EXEEXT)
	$(AM_V_CXXLD)$(__d_libdir__libdmtcp_pid_so_LINK) $(__d_libdir__libdmtcp_pid_so_OBJECTS) $(__d_libdir__libdmtcp_pid_so_LDADD) $(LIBS)

$(d_libdir)/libdmtcp_svipc.so$(EXEEXT): $(__d_libdir__libdmtcp_svipc_so_OBJECTS) $(__d_libdir__libdmtcp_svipc_so_DEPENDENCIES) $(EXTRA___d_libdir__libdmtcp_svipc_so_DEPENDENCIES) $(d_libdir)/$(am__dirstamp)
	@rm -f $(d_libdir)/libdmtcp_svipc.so$(EXEEXT)
	$(AM_V_CXXLD)$(__d_libdir__libdmtcp_svipc_so_LINK) $(__d_libdir__libdmtcp_svipc_so_OBJECTS) $(__d_libdir__libdmtcp_svipc_so_LDADD) $(LIBS)

$(d_libdir)/libdmtcp_timer.so$(EXEEXT): $(__d_libdir__libdmtcp_timer_so_OBJECTS) $(__d_libdir__libdmtcp_timer_so_DEPENDENCIES) $(EXTRA___d_libdir__libdmtcp_timer_so_DEPENDENCIES) $(d_libdir)/$(am__dirstamp)
	@rm -f $(d_libdir)/libdmtcp_timer.so$(EXEEXT)
	$(AM_V_CXXLD)$(__d_libdir__libdmtcp_timer_so_LINK) $(__d_libdir__libdmtcp_timer_so_OBJECTS) $(__d_libdir__libdmtcp_timer_so_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/dlwrappers.Po
include ./$(DEPDIR)/i-connection.Po
include ./$(DEPDIR)/i-connectionidentifier.Po
include ./$(DEPDIR)/i-connectionlist.Po
include ./$(DEPDIR)/i-connectionrewirer.Po
include ./$(DEPDIR)/i-dmtcp_ssh.Po
include ./$(DEPDIR)/i-dmtcp_sshd.Po
include ./$(DEPDIR)/i-eventconnection.Po
include ./$(DEPDIR)/i-eventconnlist.Po
include ./$(DEPDIR)/i-eventwrappers.Po
include ./$(DEPDIR)/i-fileconnection.Po
include ./$(DEPDIR)/i-fileconnlist.Po
include ./$(DEPDIR)/i-filewrappers.Po
include ./$(DEPDIR)/i-ipc.Po
include ./$(DEPDIR)/i-kernelbufferdrainer.Po
include ./$(DEPDIR)/i-posixipcwrappers.Po
include ./$(DEPDIR)/i-socketconnection.Po
include ./$(DEPDIR)/i-socketconnlist.Po
include ./$(DEPDIR)/i-socketwrappers.Po
include ./$(DEPDIR)/i-ssh.Po
include ./$(DEPDIR)/i-sshdrainer.Po
include ./$(DEPDIR)/i-util_descriptor.Po
include ./$(DEPDIR)/i-util_ssh.Po
include ./$(DEPDIR)/mallocwrappers.Po
include ./$(DEPDIR)/mmapwrappers.Po
include ./$(DEPDIR)/pid.Po
include ./$(DEPDIR)/pid_filewrappers.Po
include ./$(DEPDIR)/pid_miscwrappers.Po
include ./$(DEPDIR)/pid_syscallsreal.Po
include ./$(DEPDIR)/pidwrappers.Po
include ./$(DEPDIR)/sched_wrappers.Po
include ./$(DEPDIR)/sysvipc.Po
include ./$(DEPDIR)/sysvipcwrappers.Po
include ./$(DEPDIR)/timer_create.Po
include ./$(DEPDIR)/timerlist.Po
include ./$(DEPDIR)/timerwrappers.Po
include ./$(DEPDIR)/virtualpidtable.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

pid_syscallsreal.o: pid/pid_syscallsreal.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pid_syscallsreal.o -MD -MP -MF $(DEPDIR)/pid_syscallsreal.Tpo -c -o pid_syscallsreal.o `test -f 'pid/pid_syscallsreal.c' || echo '$(srcdir)/'`pid/pid_syscallsreal.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/pid_syscallsreal.Tpo $(DEPDIR)/pid_syscallsreal.Po
#	$(AM_V_CC)source='pid/pid_syscallsreal.c' object='pid_syscallsreal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pid_syscallsreal.o `test -f 'pid/pid_syscallsreal.c' || echo '$(srcdir)/'`pid/pid_syscallsreal.c

pid_syscallsreal.obj: pid/pid_syscallsreal.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT pid_syscallsreal.obj -MD -MP -MF $(DEPDIR)/pid_syscallsreal.Tpo -c -o pid_syscallsreal.obj `if test -f 'pid/pid_syscallsreal.c'; then $(CYGPATH_W) 'pid/pid_syscallsreal.c'; else $(CYGPATH_W) '$(srcdir)/pid/pid_syscallsreal.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pid_syscallsreal.Tpo $(DEPDIR)/pid_syscallsreal.Po
#	$(AM_V_CC)source='pid/pid_syscallsreal.c' object='pid_syscallsreal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o pid_syscallsreal.obj `if test -f 'pid/pid_syscallsreal.c'; then $(CYGPATH_W) 'pid/pid_syscallsreal.c'; else $(CYGPATH_W) '$(srcdir)/pid/pid_syscallsreal.c'; fi`

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

i-util_ssh.o: ipc/ssh/util_ssh.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libssh_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-util_ssh.o -MD -MP -MF $(DEPDIR)/i-util_ssh.Tpo -c -o i-util_ssh.o `test -f 'ipc/ssh/util_ssh.cpp' || echo '$(srcdir)/'`ipc/ssh/util_ssh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-util_ssh.Tpo $(DEPDIR)/i-util_ssh.Po
#	$(AM_V_CXX)source='ipc/ssh/util_ssh.cpp' object='i-util_ssh.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libssh_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-util_ssh.o `test -f 'ipc/ssh/util_ssh.cpp' || echo '$(srcdir)/'`ipc/ssh/util_ssh.cpp

i-util_ssh.obj: ipc/ssh/util_ssh.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libssh_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-util_ssh.obj -MD -MP -MF $(DEPDIR)/i-util_ssh.Tpo -c -o i-util_ssh.obj `if test -f 'ipc/ssh/util_ssh.cpp'; then $(CYGPATH_W) 'ipc/ssh/util_ssh.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/ssh/util_ssh.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-util_ssh.Tpo $(DEPDIR)/i-util_ssh.Po
#	$(AM_V_CXX)source='ipc/ssh/util_ssh.cpp' object='i-util_ssh.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libssh_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-util_ssh.obj `if test -f 'ipc/ssh/util_ssh.cpp'; then $(CYGPATH_W) 'ipc/ssh/util_ssh.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/ssh/util_ssh.cpp'; fi`

i-dmtcp_ssh.o: ipc/ssh/dmtcp_ssh.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_bindir__dmtcp_ssh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-dmtcp_ssh.o -MD -MP -MF $(DEPDIR)/i-dmtcp_ssh.Tpo -c -o i-dmtcp_ssh.o `test -f 'ipc/ssh/dmtcp_ssh.cpp' || echo '$(srcdir)/'`ipc/ssh/dmtcp_ssh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-dmtcp_ssh.Tpo $(DEPDIR)/i-dmtcp_ssh.Po
#	$(AM_V_CXX)source='ipc/ssh/dmtcp_ssh.cpp' object='i-dmtcp_ssh.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_bindir__dmtcp_ssh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-dmtcp_ssh.o `test -f 'ipc/ssh/dmtcp_ssh.cpp' || echo '$(srcdir)/'`ipc/ssh/dmtcp_ssh.cpp

i-dmtcp_ssh.obj: ipc/ssh/dmtcp_ssh.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_bindir__dmtcp_ssh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-dmtcp_ssh.obj -MD -MP -MF $(DEPDIR)/i-dmtcp_ssh.Tpo -c -o i-dmtcp_ssh.obj `if test -f 'ipc/ssh/dmtcp_ssh.cpp'; then $(CYGPATH_W) 'ipc/ssh/dmtcp_ssh.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/ssh/dmtcp_ssh.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-dmtcp_ssh.Tpo $(DEPDIR)/i-dmtcp_ssh.Po
#	$(AM_V_CXX)source='ipc/ssh/dmtcp_ssh.cpp' object='i-dmtcp_ssh.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_bindir__dmtcp_ssh_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-dmtcp_ssh.obj `if test -f 'ipc/ssh/dmtcp_ssh.cpp'; then $(CYGPATH_W) 'ipc/ssh/dmtcp_ssh.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/ssh/dmtcp_ssh.cpp'; fi`

i-dmtcp_sshd.o: ipc/ssh/dmtcp_sshd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_bindir__dmtcp_sshd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-dmtcp_sshd.o -MD -MP -MF $(DEPDIR)/i-dmtcp_sshd.Tpo -c -o i-dmtcp_sshd.o `test -f 'ipc/ssh/dmtcp_sshd.cpp' || echo '$(srcdir)/'`ipc/ssh/dmtcp_sshd.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-dmtcp_sshd.Tpo $(DEPDIR)/i-dmtcp_sshd.Po
#	$(AM_V_CXX)source='ipc/ssh/dmtcp_sshd.cpp' object='i-dmtcp_sshd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_bindir__dmtcp_sshd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-dmtcp_sshd.o `test -f 'ipc/ssh/dmtcp_sshd.cpp' || echo '$(srcdir)/'`ipc/ssh/dmtcp_sshd.cpp

i-dmtcp_sshd.obj: ipc/ssh/dmtcp_sshd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_bindir__dmtcp_sshd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-dmtcp_sshd.obj -MD -MP -MF $(DEPDIR)/i-dmtcp_sshd.Tpo -c -o i-dmtcp_sshd.obj `if test -f 'ipc/ssh/dmtcp_sshd.cpp'; then $(CYGPATH_W) 'ipc/ssh/dmtcp_sshd.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/ssh/dmtcp_sshd.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-dmtcp_sshd.Tpo $(DEPDIR)/i-dmtcp_sshd.Po
#	$(AM_V_CXX)source='ipc/ssh/dmtcp_sshd.cpp' object='i-dmtcp_sshd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_bindir__dmtcp_sshd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-dmtcp_sshd.obj `if test -f 'ipc/ssh/dmtcp_sshd.cpp'; then $(CYGPATH_W) 'ipc/ssh/dmtcp_sshd.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/ssh/dmtcp_sshd.cpp'; fi`

mallocwrappers.o: alloc/mallocwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mallocwrappers.o -MD -MP -MF $(DEPDIR)/mallocwrappers.Tpo -c -o mallocwrappers.o `test -f 'alloc/mallocwrappers.cpp' || echo '$(srcdir)/'`alloc/mallocwrappers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/mallocwrappers.Tpo $(DEPDIR)/mallocwrappers.Po
#	$(AM_V_CXX)source='alloc/mallocwrappers.cpp' object='mallocwrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mallocwrappers.o `test -f 'alloc/mallocwrappers.cpp' || echo '$(srcdir)/'`alloc/mallocwrappers.cpp

mallocwrappers.obj: alloc/mallocwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mallocwrappers.obj -MD -MP -MF $(DEPDIR)/mallocwrappers.Tpo -c -o mallocwrappers.obj `if test -f 'alloc/mallocwrappers.cpp'; then $(CYGPATH_W) 'alloc/mallocwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/alloc/mallocwrappers.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mallocwrappers.Tpo $(DEPDIR)/mallocwrappers.Po
#	$(AM_V_CXX)source='alloc/mallocwrappers.cpp' object='mallocwrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mallocwrappers.obj `if test -f 'alloc/mallocwrappers.cpp'; then $(CYGPATH_W) 'alloc/mallocwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/alloc/mallocwrappers.cpp'; fi`

mmapwrappers.o: alloc/mmapwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mmapwrappers.o -MD -MP -MF $(DEPDIR)/mmapwrappers.Tpo -c -o mmapwrappers.o `test -f 'alloc/mmapwrappers.cpp' || echo '$(srcdir)/'`alloc/mmapwrappers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/mmapwrappers.Tpo $(DEPDIR)/mmapwrappers.Po
#	$(AM_V_CXX)source='alloc/mmapwrappers.cpp' object='mmapwrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mmapwrappers.o `test -f 'alloc/mmapwrappers.cpp' || echo '$(srcdir)/'`alloc/mmapwrappers.cpp

mmapwrappers.obj: alloc/mmapwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mmapwrappers.obj -MD -MP -MF $(DEPDIR)/mmapwrappers.Tpo -c -o mmapwrappers.obj `if test -f 'alloc/mmapwrappers.cpp'; then $(CYGPATH_W) 'alloc/mmapwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/alloc/mmapwrappers.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mmapwrappers.Tpo $(DEPDIR)/mmapwrappers.Po
#	$(AM_V_CXX)source='alloc/mmapwrappers.cpp' object='mmapwrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mmapwrappers.obj `if test -f 'alloc/mmapwrappers.cpp'; then $(CYGPATH_W) 'alloc/mmapwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/alloc/mmapwrappers.cpp'; fi`

dlwrappers.o: dl/dlwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dlwrappers.o -MD -MP -MF $(DEPDIR)/dlwrappers.Tpo -c -o dlwrappers.o `test -f 'dl/dlwrappers.cpp' || echo '$(srcdir)/'`dl/dlwrappers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dlwrappers.Tpo $(DEPDIR)/dlwrappers.Po
#	$(AM_V_CXX)source='dl/dlwrappers.cpp' object='dlwrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dlwrappers.o `test -f 'dl/dlwrappers.cpp' || echo '$(srcdir)/'`dl/dlwrappers.cpp

dlwrappers.obj: dl/dlwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dlwrappers.obj -MD -MP -MF $(DEPDIR)/dlwrappers.Tpo -c -o dlwrappers.obj `if test -f 'dl/dlwrappers.cpp'; then $(CYGPATH_W) 'dl/dlwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/dl/dlwrappers.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dlwrappers.Tpo $(DEPDIR)/dlwrappers.Po
#	$(AM_V_CXX)source='dl/dlwrappers.cpp' object='dlwrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dlwrappers.obj `if test -f 'dl/dlwrappers.cpp'; then $(CYGPATH_W) 'dl/dlwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/dl/dlwrappers.cpp'; fi`

i-connection.o: ipc/connection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-connection.o -MD -MP -MF $(DEPDIR)/i-connection.Tpo -c -o i-connection.o `test -f 'ipc/connection.cpp' || echo '$(srcdir)/'`ipc/connection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-connection.Tpo $(DEPDIR)/i-connection.Po
#	$(AM_V_CXX)source='ipc/connection.cpp' object='i-connection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-connection.o `test -f 'ipc/connection.cpp' || echo '$(srcdir)/'`ipc/connection.cpp

i-connection.obj: ipc/connection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-connection.obj -MD -MP -MF $(DEPDIR)/i-connection.Tpo -c -o i-connection.obj `if test -f 'ipc/connection.cpp'; then $(CYGPATH_W) 'ipc/connection.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/connection.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-connection.Tpo $(DEPDIR)/i-connection.Po
#	$(AM_V_CXX)source='ipc/connection.cpp' object='i-connection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-connection.obj `if test -f 'ipc/connection.cpp'; then $(CYGPATH_W) 'ipc/connection.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/connection.cpp'; fi`

i-connectionidentifier.o: ipc/connectionidentifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-connectionidentifier.o -MD -MP -MF $(DEPDIR)/i-connectionidentifier.Tpo -c -o i-connectionidentifier.o `test -f 'ipc/connectionidentifier.cpp' || echo '$(srcdir)/'`ipc/connectionidentifier.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-connectionidentifier.Tpo $(DEPDIR)/i-connectionidentifier.Po
#	$(AM_V_CXX)source='ipc/connectionidentifier.cpp' object='i-connectionidentifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-connectionidentifier.o `test -f 'ipc/connectionidentifier.cpp' || echo '$(srcdir)/'`ipc/connectionidentifier.cpp

i-connectionidentifier.obj: ipc/connectionidentifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-connectionidentifier.obj -MD -MP -MF $(DEPDIR)/i-connectionidentifier.Tpo -c -o i-connectionidentifier.obj `if test -f 'ipc/connectionidentifier.cpp'; then $(CYGPATH_W) 'ipc/connectionidentifier.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/connectionidentifier.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-connectionidentifier.Tpo $(DEPDIR)/i-connectionidentifier.Po
#	$(AM_V_CXX)source='ipc/connectionidentifier.cpp' object='i-connectionidentifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-connectionidentifier.obj `if test -f 'ipc/connectionidentifier.cpp'; then $(CYGPATH_W) 'ipc/connectionidentifier.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/connectionidentifier.cpp'; fi`

i-connectionlist.o: ipc/connectionlist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-connectionlist.o -MD -MP -MF $(DEPDIR)/i-connectionlist.Tpo -c -o i-connectionlist.o `test -f 'ipc/connectionlist.cpp' || echo '$(srcdir)/'`ipc/connectionlist.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-connectionlist.Tpo $(DEPDIR)/i-connectionlist.Po
#	$(AM_V_CXX)source='ipc/connectionlist.cpp' object='i-connectionlist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-connectionlist.o `test -f 'ipc/connectionlist.cpp' || echo '$(srcdir)/'`ipc/connectionlist.cpp

i-connectionlist.obj: ipc/connectionlist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-connectionlist.obj -MD -MP -MF $(DEPDIR)/i-connectionlist.Tpo -c -o i-connectionlist.obj `if test -f 'ipc/connectionlist.cpp'; then $(CYGPATH_W) 'ipc/connectionlist.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/connectionlist.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-connectionlist.Tpo $(DEPDIR)/i-connectionlist.Po
#	$(AM_V_CXX)source='ipc/connectionlist.cpp' object='i-connectionlist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-connectionlist.obj `if test -f 'ipc/connectionlist.cpp'; then $(CYGPATH_W) 'ipc/connectionlist.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/connectionlist.cpp'; fi`

i-ipc.o: ipc/ipc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-ipc.o -MD -MP -MF $(DEPDIR)/i-ipc.Tpo -c -o i-ipc.o `test -f 'ipc/ipc.cpp' || echo '$(srcdir)/'`ipc/ipc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-ipc.Tpo $(DEPDIR)/i-ipc.Po
#	$(AM_V_CXX)source='ipc/ipc.cpp' object='i-ipc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-ipc.o `test -f 'ipc/ipc.cpp' || echo '$(srcdir)/'`ipc/ipc.cpp

i-ipc.obj: ipc/ipc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-ipc.obj -MD -MP -MF $(DEPDIR)/i-ipc.Tpo -c -o i-ipc.obj `if test -f 'ipc/ipc.cpp'; then $(CYGPATH_W) 'ipc/ipc.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/ipc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-ipc.Tpo $(DEPDIR)/i-ipc.Po
#	$(AM_V_CXX)source='ipc/ipc.cpp' object='i-ipc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-ipc.obj `if test -f 'ipc/ipc.cpp'; then $(CYGPATH_W) 'ipc/ipc.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/ipc.cpp'; fi`

i-eventconnection.o: ipc/event/eventconnection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-eventconnection.o -MD -MP -MF $(DEPDIR)/i-eventconnection.Tpo -c -o i-eventconnection.o `test -f 'ipc/event/eventconnection.cpp' || echo '$(srcdir)/'`ipc/event/eventconnection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-eventconnection.Tpo $(DEPDIR)/i-eventconnection.Po
#	$(AM_V_CXX)source='ipc/event/eventconnection.cpp' object='i-eventconnection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-eventconnection.o `test -f 'ipc/event/eventconnection.cpp' || echo '$(srcdir)/'`ipc/event/eventconnection.cpp

i-eventconnection.obj: ipc/event/eventconnection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-eventconnection.obj -MD -MP -MF $(DEPDIR)/i-eventconnection.Tpo -c -o i-eventconnection.obj `if test -f 'ipc/event/eventconnection.cpp'; then $(CYGPATH_W) 'ipc/event/eventconnection.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/event/eventconnection.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-eventconnection.Tpo $(DEPDIR)/i-eventconnection.Po
#	$(AM_V_CXX)source='ipc/event/eventconnection.cpp' object='i-eventconnection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-eventconnection.obj `if test -f 'ipc/event/eventconnection.cpp'; then $(CYGPATH_W) 'ipc/event/eventconnection.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/event/eventconnection.cpp'; fi`

i-eventconnlist.o: ipc/event/eventconnlist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-eventconnlist.o -MD -MP -MF $(DEPDIR)/i-eventconnlist.Tpo -c -o i-eventconnlist.o `test -f 'ipc/event/eventconnlist.cpp' || echo '$(srcdir)/'`ipc/event/eventconnlist.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-eventconnlist.Tpo $(DEPDIR)/i-eventconnlist.Po
#	$(AM_V_CXX)source='ipc/event/eventconnlist.cpp' object='i-eventconnlist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-eventconnlist.o `test -f 'ipc/event/eventconnlist.cpp' || echo '$(srcdir)/'`ipc/event/eventconnlist.cpp

i-eventconnlist.obj: ipc/event/eventconnlist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-eventconnlist.obj -MD -MP -MF $(DEPDIR)/i-eventconnlist.Tpo -c -o i-eventconnlist.obj `if test -f 'ipc/event/eventconnlist.cpp'; then $(CYGPATH_W) 'ipc/event/eventconnlist.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/event/eventconnlist.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-eventconnlist.Tpo $(DEPDIR)/i-eventconnlist.Po
#	$(AM_V_CXX)source='ipc/event/eventconnlist.cpp' object='i-eventconnlist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-eventconnlist.obj `if test -f 'ipc/event/eventconnlist.cpp'; then $(CYGPATH_W) 'ipc/event/eventconnlist.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/event/eventconnlist.cpp'; fi`

i-eventwrappers.o: ipc/event/eventwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-eventwrappers.o -MD -MP -MF $(DEPDIR)/i-eventwrappers.Tpo -c -o i-eventwrappers.o `test -f 'ipc/event/eventwrappers.cpp' || echo '$(srcdir)/'`ipc/event/eventwrappers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-eventwrappers.Tpo $(DEPDIR)/i-eventwrappers.Po
#	$(AM_V_CXX)source='ipc/event/eventwrappers.cpp' object='i-eventwrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-eventwrappers.o `test -f 'ipc/event/eventwrappers.cpp' || echo '$(srcdir)/'`ipc/event/eventwrappers.cpp

i-eventwrappers.obj: ipc/event/eventwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-eventwrappers.obj -MD -MP -MF $(DEPDIR)/i-eventwrappers.Tpo -c -o i-eventwrappers.obj `if test -f 'ipc/event/eventwrappers.cpp'; then $(CYGPATH_W) 'ipc/event/eventwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/event/eventwrappers.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-eventwrappers.Tpo $(DEPDIR)/i-eventwrappers.Po
#	$(AM_V_CXX)source='ipc/event/eventwrappers.cpp' object='i-eventwrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-eventwrappers.obj `if test -f 'ipc/event/eventwrappers.cpp'; then $(CYGPATH_W) 'ipc/event/eventwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/event/eventwrappers.cpp'; fi`

i-util_descriptor.o: ipc/event/util_descriptor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-util_descriptor.o -MD -MP -MF $(DEPDIR)/i-util_descriptor.Tpo -c -o i-util_descriptor.o `test -f 'ipc/event/util_descriptor.cpp' || echo '$(srcdir)/'`ipc/event/util_descriptor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-util_descriptor.Tpo $(DEPDIR)/i-util_descriptor.Po
#	$(AM_V_CXX)source='ipc/event/util_descriptor.cpp' object='i-util_descriptor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-util_descriptor.o `test -f 'ipc/event/util_descriptor.cpp' || echo '$(srcdir)/'`ipc/event/util_descriptor.cpp

i-util_descriptor.obj: ipc/event/util_descriptor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-util_descriptor.obj -MD -MP -MF $(DEPDIR)/i-util_descriptor.Tpo -c -o i-util_descriptor.obj `if test -f 'ipc/event/util_descriptor.cpp'; then $(CYGPATH_W) 'ipc/event/util_descriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/event/util_descriptor.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-util_descriptor.Tpo $(DEPDIR)/i-util_descriptor.Po
#	$(AM_V_CXX)source='ipc/event/util_descriptor.cpp' object='i-util_descriptor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-util_descriptor.obj `if test -f 'ipc/event/util_descriptor.cpp'; then $(CYGPATH_W) 'ipc/event/util_descriptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/event/util_descriptor.cpp'; fi`

i-fileconnection.o: ipc/file/fileconnection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-fileconnection.o -MD -MP -MF $(DEPDIR)/i-fileconnection.Tpo -c -o i-fileconnection.o `test -f 'ipc/file/fileconnection.cpp' || echo '$(srcdir)/'`ipc/file/fileconnection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-fileconnection.Tpo $(DEPDIR)/i-fileconnection.Po
#	$(AM_V_CXX)source='ipc/file/fileconnection.cpp' object='i-fileconnection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-fileconnection.o `test -f 'ipc/file/fileconnection.cpp' || echo '$(srcdir)/'`ipc/file/fileconnection.cpp

i-fileconnection.obj: ipc/file/fileconnection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-fileconnection.obj -MD -MP -MF $(DEPDIR)/i-fileconnection.Tpo -c -o i-fileconnection.obj `if test -f 'ipc/file/fileconnection.cpp'; then $(CYGPATH_W) 'ipc/file/fileconnection.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/file/fileconnection.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-fileconnection.Tpo $(DEPDIR)/i-fileconnection.Po
#	$(AM_V_CXX)source='ipc/file/fileconnection.cpp' object='i-fileconnection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-fileconnection.obj `if test -f 'ipc/file/fileconnection.cpp'; then $(CYGPATH_W) 'ipc/file/fileconnection.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/file/fileconnection.cpp'; fi`

i-fileconnlist.o: ipc/file/fileconnlist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-fileconnlist.o -MD -MP -MF $(DEPDIR)/i-fileconnlist.Tpo -c -o i-fileconnlist.o `test -f 'ipc/file/fileconnlist.cpp' || echo '$(srcdir)/'`ipc/file/fileconnlist.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-fileconnlist.Tpo $(DEPDIR)/i-fileconnlist.Po
#	$(AM_V_CXX)source='ipc/file/fileconnlist.cpp' object='i-fileconnlist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-fileconnlist.o `test -f 'ipc/file/fileconnlist.cpp' || echo '$(srcdir)/'`ipc/file/fileconnlist.cpp

i-fileconnlist.obj: ipc/file/fileconnlist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-fileconnlist.obj -MD -MP -MF $(DEPDIR)/i-fileconnlist.Tpo -c -o i-fileconnlist.obj `if test -f 'ipc/file/fileconnlist.cpp'; then $(CYGPATH_W) 'ipc/file/fileconnlist.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/file/fileconnlist.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-fileconnlist.Tpo $(DEPDIR)/i-fileconnlist.Po
#	$(AM_V_CXX)source='ipc/file/fileconnlist.cpp' object='i-fileconnlist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-fileconnlist.obj `if test -f 'ipc/file/fileconnlist.cpp'; then $(CYGPATH_W) 'ipc/file/fileconnlist.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/file/fileconnlist.cpp'; fi`

i-filewrappers.o: ipc/file/filewrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-filewrappers.o -MD -MP -MF $(DEPDIR)/i-filewrappers.Tpo -c -o i-filewrappers.o `test -f 'ipc/file/filewrappers.cpp' || echo '$(srcdir)/'`ipc/file/filewrappers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-filewrappers.Tpo $(DEPDIR)/i-filewrappers.Po
#	$(AM_V_CXX)source='ipc/file/filewrappers.cpp' object='i-filewrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-filewrappers.o `test -f 'ipc/file/filewrappers.cpp' || echo '$(srcdir)/'`ipc/file/filewrappers.cpp

i-filewrappers.obj: ipc/file/filewrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-filewrappers.obj -MD -MP -MF $(DEPDIR)/i-filewrappers.Tpo -c -o i-filewrappers.obj `if test -f 'ipc/file/filewrappers.cpp'; then $(CYGPATH_W) 'ipc/file/filewrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/file/filewrappers.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-filewrappers.Tpo $(DEPDIR)/i-filewrappers.Po
#	$(AM_V_CXX)source='ipc/file/filewrappers.cpp' object='i-filewrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-filewrappers.obj `if test -f 'ipc/file/filewrappers.cpp'; then $(CYGPATH_W) 'ipc/file/filewrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/file/filewrappers.cpp'; fi`

i-posixipcwrappers.o: ipc/file/posixipcwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-posixipcwrappers.o -MD -MP -MF $(DEPDIR)/i-posixipcwrappers.Tpo -c -o i-posixipcwrappers.o `test -f 'ipc/file/posixipcwrappers.cpp' || echo '$(srcdir)/'`ipc/file/posixipcwrappers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-posixipcwrappers.Tpo $(DEPDIR)/i-posixipcwrappers.Po
#	$(AM_V_CXX)source='ipc/file/posixipcwrappers.cpp' object='i-posixipcwrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-posixipcwrappers.o `test -f 'ipc/file/posixipcwrappers.cpp' || echo '$(srcdir)/'`ipc/file/posixipcwrappers.cpp

i-posixipcwrappers.obj: ipc/file/posixipcwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-posixipcwrappers.obj -MD -MP -MF $(DEPDIR)/i-posixipcwrappers.Tpo -c -o i-posixipcwrappers.obj `if test -f 'ipc/file/posixipcwrappers.cpp'; then $(CYGPATH_W) 'ipc/file/posixipcwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/file/posixipcwrappers.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-posixipcwrappers.Tpo $(DEPDIR)/i-posixipcwrappers.Po
#	$(AM_V_CXX)source='ipc/file/posixipcwrappers.cpp' object='i-posixipcwrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-posixipcwrappers.obj `if test -f 'ipc/file/posixipcwrappers.cpp'; then $(CYGPATH_W) 'ipc/file/posixipcwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/file/posixipcwrappers.cpp'; fi`

i-connectionrewirer.o: ipc/socket/connectionrewirer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-connectionrewirer.o -MD -MP -MF $(DEPDIR)/i-connectionrewirer.Tpo -c -o i-connectionrewirer.o `test -f 'ipc/socket/connectionrewirer.cpp' || echo '$(srcdir)/'`ipc/socket/connectionrewirer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-connectionrewirer.Tpo $(DEPDIR)/i-connectionrewirer.Po
#	$(AM_V_CXX)source='ipc/socket/connectionrewirer.cpp' object='i-connectionrewirer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-connectionrewirer.o `test -f 'ipc/socket/connectionrewirer.cpp' || echo '$(srcdir)/'`ipc/socket/connectionrewirer.cpp

i-connectionrewirer.obj: ipc/socket/connectionrewirer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-connectionrewirer.obj -MD -MP -MF $(DEPDIR)/i-connectionrewirer.Tpo -c -o i-connectionrewirer.obj `if test -f 'ipc/socket/connectionrewirer.cpp'; then $(CYGPATH_W) 'ipc/socket/connectionrewirer.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/socket/connectionrewirer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-connectionrewirer.Tpo $(DEPDIR)/i-connectionrewirer.Po
#	$(AM_V_CXX)source='ipc/socket/connectionrewirer.cpp' object='i-connectionrewirer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-connectionrewirer.obj `if test -f 'ipc/socket/connectionrewirer.cpp'; then $(CYGPATH_W) 'ipc/socket/connectionrewirer.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/socket/connectionrewirer.cpp'; fi`

i-kernelbufferdrainer.o: ipc/socket/kernelbufferdrainer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-kernelbufferdrainer.o -MD -MP -MF $(DEPDIR)/i-kernelbufferdrainer.Tpo -c -o i-kernelbufferdrainer.o `test -f 'ipc/socket/kernelbufferdrainer.cpp' || echo '$(srcdir)/'`ipc/socket/kernelbufferdrainer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-kernelbufferdrainer.Tpo $(DEPDIR)/i-kernelbufferdrainer.Po
#	$(AM_V_CXX)source='ipc/socket/kernelbufferdrainer.cpp' object='i-kernelbufferdrainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-kernelbufferdrainer.o `test -f 'ipc/socket/kernelbufferdrainer.cpp' || echo '$(srcdir)/'`ipc/socket/kernelbufferdrainer.cpp

i-kernelbufferdrainer.obj: ipc/socket/kernelbufferdrainer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-kernelbufferdrainer.obj -MD -MP -MF $(DEPDIR)/i-kernelbufferdrainer.Tpo -c -o i-kernelbufferdrainer.obj `if test -f 'ipc/socket/kernelbufferdrainer.cpp'; then $(CYGPATH_W) 'ipc/socket/kernelbufferdrainer.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/socket/kernelbufferdrainer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-kernelbufferdrainer.Tpo $(DEPDIR)/i-kernelbufferdrainer.Po
#	$(AM_V_CXX)source='ipc/socket/kernelbufferdrainer.cpp' object='i-kernelbufferdrainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-kernelbufferdrainer.obj `if test -f 'ipc/socket/kernelbufferdrainer.cpp'; then $(CYGPATH_W) 'ipc/socket/kernelbufferdrainer.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/socket/kernelbufferdrainer.cpp'; fi`

i-socketconnection.o: ipc/socket/socketconnection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-socketconnection.o -MD -MP -MF $(DEPDIR)/i-socketconnection.Tpo -c -o i-socketconnection.o `test -f 'ipc/socket/socketconnection.cpp' || echo '$(srcdir)/'`ipc/socket/socketconnection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-socketconnection.Tpo $(DEPDIR)/i-socketconnection.Po
#	$(AM_V_CXX)source='ipc/socket/socketconnection.cpp' object='i-socketconnection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-socketconnection.o `test -f 'ipc/socket/socketconnection.cpp' || echo '$(srcdir)/'`ipc/socket/socketconnection.cpp

i-socketconnection.obj: ipc/socket/socketconnection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-socketconnection.obj -MD -MP -MF $(DEPDIR)/i-socketconnection.Tpo -c -o i-socketconnection.obj `if test -f 'ipc/socket/socketconnection.cpp'; then $(CYGPATH_W) 'ipc/socket/socketconnection.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/socket/socketconnection.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-socketconnection.Tpo $(DEPDIR)/i-socketconnection.Po
#	$(AM_V_CXX)source='ipc/socket/socketconnection.cpp' object='i-socketconnection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-socketconnection.obj `if test -f 'ipc/socket/socketconnection.cpp'; then $(CYGPATH_W) 'ipc/socket/socketconnection.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/socket/socketconnection.cpp'; fi`

i-socketconnlist.o: ipc/socket/socketconnlist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-socketconnlist.o -MD -MP -MF $(DEPDIR)/i-socketconnlist.Tpo -c -o i-socketconnlist.o `test -f 'ipc/socket/socketconnlist.cpp' || echo '$(srcdir)/'`ipc/socket/socketconnlist.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-socketconnlist.Tpo $(DEPDIR)/i-socketconnlist.Po
#	$(AM_V_CXX)source='ipc/socket/socketconnlist.cpp' object='i-socketconnlist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-socketconnlist.o `test -f 'ipc/socket/socketconnlist.cpp' || echo '$(srcdir)/'`ipc/socket/socketconnlist.cpp

i-socketconnlist.obj: ipc/socket/socketconnlist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-socketconnlist.obj -MD -MP -MF $(DEPDIR)/i-socketconnlist.Tpo -c -o i-socketconnlist.obj `if test -f 'ipc/socket/socketconnlist.cpp'; then $(CYGPATH_W) 'ipc/socket/socketconnlist.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/socket/socketconnlist.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-socketconnlist.Tpo $(DEPDIR)/i-socketconnlist.Po
#	$(AM_V_CXX)source='ipc/socket/socketconnlist.cpp' object='i-socketconnlist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-socketconnlist.obj `if test -f 'ipc/socket/socketconnlist.cpp'; then $(CYGPATH_W) 'ipc/socket/socketconnlist.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/socket/socketconnlist.cpp'; fi`

i-socketwrappers.o: ipc/socket/socketwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-socketwrappers.o -MD -MP -MF $(DEPDIR)/i-socketwrappers.Tpo -c -o i-socketwrappers.o `test -f 'ipc/socket/socketwrappers.cpp' || echo '$(srcdir)/'`ipc/socket/socketwrappers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-socketwrappers.Tpo $(DEPDIR)/i-socketwrappers.Po
#	$(AM_V_CXX)source='ipc/socket/socketwrappers.cpp' object='i-socketwrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-socketwrappers.o `test -f 'ipc/socket/socketwrappers.cpp' || echo '$(srcdir)/'`ipc/socket/socketwrappers.cpp

i-socketwrappers.obj: ipc/socket/socketwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-socketwrappers.obj -MD -MP -MF $(DEPDIR)/i-socketwrappers.Tpo -c -o i-socketwrappers.obj `if test -f 'ipc/socket/socketwrappers.cpp'; then $(CYGPATH_W) 'ipc/socket/socketwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/socket/socketwrappers.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-socketwrappers.Tpo $(DEPDIR)/i-socketwrappers.Po
#	$(AM_V_CXX)source='ipc/socket/socketwrappers.cpp' object='i-socketwrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-socketwrappers.obj `if test -f 'ipc/socket/socketwrappers.cpp'; then $(CYGPATH_W) 'ipc/socket/socketwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/socket/socketwrappers.cpp'; fi`

i-ssh.o: ipc/ssh/ssh.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-ssh.o -MD -MP -MF $(DEPDIR)/i-ssh.Tpo -c -o i-ssh.o `test -f 'ipc/ssh/ssh.cpp' || echo '$(srcdir)/'`ipc/ssh/ssh.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-ssh.Tpo $(DEPDIR)/i-ssh.Po
#	$(AM_V_CXX)source='ipc/ssh/ssh.cpp' object='i-ssh.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-ssh.o `test -f 'ipc/ssh/ssh.cpp' || echo '$(srcdir)/'`ipc/ssh/ssh.cpp

i-ssh.obj: ipc/ssh/ssh.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-ssh.obj -MD -MP -MF $(DEPDIR)/i-ssh.Tpo -c -o i-ssh.obj `if test -f 'ipc/ssh/ssh.cpp'; then $(CYGPATH_W) 'ipc/ssh/ssh.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/ssh/ssh.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-ssh.Tpo $(DEPDIR)/i-ssh.Po
#	$(AM_V_CXX)source='ipc/ssh/ssh.cpp' object='i-ssh.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-ssh.obj `if test -f 'ipc/ssh/ssh.cpp'; then $(CYGPATH_W) 'ipc/ssh/ssh.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/ssh/ssh.cpp'; fi`

i-sshdrainer.o: ipc/ssh/sshdrainer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-sshdrainer.o -MD -MP -MF $(DEPDIR)/i-sshdrainer.Tpo -c -o i-sshdrainer.o `test -f 'ipc/ssh/sshdrainer.cpp' || echo '$(srcdir)/'`ipc/ssh/sshdrainer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-sshdrainer.Tpo $(DEPDIR)/i-sshdrainer.Po
#	$(AM_V_CXX)source='ipc/ssh/sshdrainer.cpp' object='i-sshdrainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-sshdrainer.o `test -f 'ipc/ssh/sshdrainer.cpp' || echo '$(srcdir)/'`ipc/ssh/sshdrainer.cpp

i-sshdrainer.obj: ipc/ssh/sshdrainer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT i-sshdrainer.obj -MD -MP -MF $(DEPDIR)/i-sshdrainer.Tpo -c -o i-sshdrainer.obj `if test -f 'ipc/ssh/sshdrainer.cpp'; then $(CYGPATH_W) 'ipc/ssh/sshdrainer.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/ssh/sshdrainer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/i-sshdrainer.Tpo $(DEPDIR)/i-sshdrainer.Po
#	$(AM_V_CXX)source='ipc/ssh/sshdrainer.cpp' object='i-sshdrainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(__d_libdir__libdmtcp_ipc_so_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o i-sshdrainer.obj `if test -f 'ipc/ssh/sshdrainer.cpp'; then $(CYGPATH_W) 'ipc/ssh/sshdrainer.cpp'; else $(CYGPATH_W) '$(srcdir)/ipc/ssh/sshdrainer.cpp'; fi`

pid.o: pid/pid.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pid.o -MD -MP -MF $(DEPDIR)/pid.Tpo -c -o pid.o `test -f 'pid/pid.cpp' || echo '$(srcdir)/'`pid/pid.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pid.Tpo $(DEPDIR)/pid.Po
#	$(AM_V_CXX)source='pid/pid.cpp' object='pid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pid.o `test -f 'pid/pid.cpp' || echo '$(srcdir)/'`pid/pid.cpp

pid.obj: pid/pid.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pid.obj -MD -MP -MF $(DEPDIR)/pid.Tpo -c -o pid.obj `if test -f 'pid/pid.cpp'; then $(CYGPATH_W) 'pid/pid.cpp'; else $(CYGPATH_W) '$(srcdir)/pid/pid.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pid.Tpo $(DEPDIR)/pid.Po
#	$(AM_V_CXX)source='pid/pid.cpp' object='pid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pid.obj `if test -f 'pid/pid.cpp'; then $(CYGPATH_W) 'pid/pid.cpp'; else $(CYGPATH_W) '$(srcdir)/pid/pid.cpp'; fi`

pid_filewrappers.o: pid/pid_filewrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pid_filewrappers.o -MD -MP -MF $(DEPDIR)/pid_filewrappers.Tpo -c -o pid_filewrappers.o `test -f 'pid/pid_filewrappers.cpp' || echo '$(srcdir)/'`pid/pid_filewrappers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pid_filewrappers.Tpo $(DEPDIR)/pid_filewrappers.Po
#	$(AM_V_CXX)source='pid/pid_filewrappers.cpp' object='pid_filewrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pid_filewrappers.o `test -f 'pid/pid_filewrappers.cpp' || echo '$(srcdir)/'`pid/pid_filewrappers.cpp

pid_filewrappers.obj: pid/pid_filewrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pid_filewrappers.obj -MD -MP -MF $(DEPDIR)/pid_filewrappers.Tpo -c -o pid_filewrappers.obj `if test -f 'pid/pid_filewrappers.cpp'; then $(CYGPATH_W) 'pid/pid_filewrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/pid/pid_filewrappers.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pid_filewrappers.Tpo $(DEPDIR)/pid_filewrappers.Po
#	$(AM_V_CXX)source='pid/pid_filewrappers.cpp' object='pid_filewrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pid_filewrappers.obj `if test -f 'pid/pid_filewrappers.cpp'; then $(CYGPATH_W) 'pid/pid_filewrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/pid/pid_filewrappers.cpp'; fi`

pid_miscwrappers.o: pid/pid_miscwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pid_miscwrappers.o -MD -MP -MF $(DEPDIR)/pid_miscwrappers.Tpo -c -o pid_miscwrappers.o `test -f 'pid/pid_miscwrappers.cpp' || echo '$(srcdir)/'`pid/pid_miscwrappers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pid_miscwrappers.Tpo $(DEPDIR)/pid_miscwrappers.Po
#	$(AM_V_CXX)source='pid/pid_miscwrappers.cpp' object='pid_miscwrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pid_miscwrappers.o `test -f 'pid/pid_miscwrappers.cpp' || echo '$(srcdir)/'`pid/pid_miscwrappers.cpp

pid_miscwrappers.obj: pid/pid_miscwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pid_miscwrappers.obj -MD -MP -MF $(DEPDIR)/pid_miscwrappers.Tpo -c -o pid_miscwrappers.obj `if test -f 'pid/pid_miscwrappers.cpp'; then $(CYGPATH_W) 'pid/pid_miscwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/pid/pid_miscwrappers.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pid_miscwrappers.Tpo $(DEPDIR)/pid_miscwrappers.Po
#	$(AM_V_CXX)source='pid/pid_miscwrappers.cpp' object='pid_miscwrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pid_miscwrappers.obj `if test -f 'pid/pid_miscwrappers.cpp'; then $(CYGPATH_W) 'pid/pid_miscwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/pid/pid_miscwrappers.cpp'; fi`

pidwrappers.o: pid/pidwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pidwrappers.o -MD -MP -MF $(DEPDIR)/pidwrappers.Tpo -c -o pidwrappers.o `test -f 'pid/pidwrappers.cpp' || echo '$(srcdir)/'`pid/pidwrappers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pidwrappers.Tpo $(DEPDIR)/pidwrappers.Po
#	$(AM_V_CXX)source='pid/pidwrappers.cpp' object='pidwrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pidwrappers.o `test -f 'pid/pidwrappers.cpp' || echo '$(srcdir)/'`pid/pidwrappers.cpp

pidwrappers.obj: pid/pidwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pidwrappers.obj -MD -MP -MF $(DEPDIR)/pidwrappers.Tpo -c -o pidwrappers.obj `if test -f 'pid/pidwrappers.cpp'; then $(CYGPATH_W) 'pid/pidwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/pid/pidwrappers.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pidwrappers.Tpo $(DEPDIR)/pidwrappers.Po
#	$(AM_V_CXX)source='pid/pidwrappers.cpp' object='pidwrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pidwrappers.obj `if test -f 'pid/pidwrappers.cpp'; then $(CYGPATH_W) 'pid/pidwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/pid/pidwrappers.cpp'; fi`

sched_wrappers.o: pid/sched_wrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sched_wrappers.o -MD -MP -MF $(DEPDIR)/sched_wrappers.Tpo -c -o sched_wrappers.o `test -f 'pid/sched_wrappers.cpp' || echo '$(srcdir)/'`pid/sched_wrappers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_wrappers.Tpo $(DEPDIR)/sched_wrappers.Po
#	$(AM_V_CXX)source='pid/sched_wrappers.cpp' object='sched_wrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sched_wrappers.o `test -f 'pid/sched_wrappers.cpp' || echo '$(srcdir)/'`pid/sched_wrappers.cpp

sched_wrappers.obj: pid/sched_wrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sched_wrappers.obj -MD -MP -MF $(DEPDIR)/sched_wrappers.Tpo -c -o sched_wrappers.obj `if test -f 'pid/sched_wrappers.cpp'; then $(CYGPATH_W) 'pid/sched_wrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/pid/sched_wrappers.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sched_wrappers.Tpo $(DEPDIR)/sched_wrappers.Po
#	$(AM_V_CXX)source='pid/sched_wrappers.cpp' object='sched_wrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sched_wrappers.obj `if test -f 'pid/sched_wrappers.cpp'; then $(CYGPATH_W) 'pid/sched_wrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/pid/sched_wrappers.cpp'; fi`

virtualpidtable.o: pid/virtualpidtable.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT virtualpidtable.o -MD -MP -MF $(DEPDIR)/virtualpidtable.Tpo -c -o virtualpidtable.o `test -f 'pid/virtualpidtable.cpp' || echo '$(srcdir)/'`pid/virtualpidtable.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/virtualpidtable.Tpo $(DEPDIR)/virtualpidtable.Po
#	$(AM_V_CXX)source='pid/virtualpidtable.cpp' object='virtualpidtable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o virtualpidtable.o `test -f 'pid/virtualpidtable.cpp' || echo '$(srcdir)/'`pid/virtualpidtable.cpp

virtualpidtable.obj: pid/virtualpidtable.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT virtualpidtable.obj -MD -MP -MF $(DEPDIR)/virtualpidtable.Tpo -c -o virtualpidtable.obj `if test -f 'pid/virtualpidtable.cpp'; then $(CYGPATH_W) 'pid/virtualpidtable.cpp'; else $(CYGPATH_W) '$(srcdir)/pid/virtualpidtable.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virtualpidtable.Tpo $(DEPDIR)/virtualpidtable.Po
#	$(AM_V_CXX)source='pid/virtualpidtable.cpp' object='virtualpidtable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o virtualpidtable.obj `if test -f 'pid/virtualpidtable.cpp'; then $(CYGPATH_W) 'pid/virtualpidtable.cpp'; else $(CYGPATH_W) '$(srcdir)/pid/virtualpidtable.cpp'; fi`

sysvipc.o: svipc/sysvipc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sysvipc.o -MD -MP -MF $(DEPDIR)/sysvipc.Tpo -c -o sysvipc.o `test -f 'svipc/sysvipc.cpp' || echo '$(srcdir)/'`svipc/sysvipc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sysvipc.Tpo $(DEPDIR)/sysvipc.Po
#	$(AM_V_CXX)source='svipc/sysvipc.cpp' object='sysvipc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sysvipc.o `test -f 'svipc/sysvipc.cpp' || echo '$(srcdir)/'`svipc/sysvipc.cpp

sysvipc.obj: svipc/sysvipc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sysvipc.obj -MD -MP -MF $(DEPDIR)/sysvipc.Tpo -c -o sysvipc.obj `if test -f 'svipc/sysvipc.cpp'; then $(CYGPATH_W) 'svipc/sysvipc.cpp'; else $(CYGPATH_W) '$(srcdir)/svipc/sysvipc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sysvipc.Tpo $(DEPDIR)/sysvipc.Po
#	$(AM_V_CXX)source='svipc/sysvipc.cpp' object='sysvipc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sysvipc.obj `if test -f 'svipc/sysvipc.cpp'; then $(CYGPATH_W) 'svipc/sysvipc.cpp'; else $(CYGPATH_W) '$(srcdir)/svipc/sysvipc.cpp'; fi`

sysvipcwrappers.o: svipc/sysvipcwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sysvipcwrappers.o -MD -MP -MF $(DEPDIR)/sysvipcwrappers.Tpo -c -o sysvipcwrappers.o `test -f 'svipc/sysvipcwrappers.cpp' || echo '$(srcdir)/'`svipc/sysvipcwrappers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sysvipcwrappers.Tpo $(DEPDIR)/sysvipcwrappers.Po
#	$(AM_V_CXX)source='svipc/sysvipcwrappers.cpp' object='sysvipcwrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sysvipcwrappers.o `test -f 'svipc/sysvipcwrappers.cpp' || echo '$(srcdir)/'`svipc/sysvipcwrappers.cpp

sysvipcwrappers.obj: svipc/sysvipcwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sysvipcwrappers.obj -MD -MP -MF $(DEPDIR)/sysvipcwrappers.Tpo -c -o sysvipcwrappers.obj `if test -f 'svipc/sysvipcwrappers.cpp'; then $(CYGPATH_W) 'svipc/sysvipcwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/svipc/sysvipcwrappers.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sysvipcwrappers.Tpo $(DEPDIR)/sysvipcwrappers.Po
#	$(AM_V_CXX)source='svipc/sysvipcwrappers.cpp' object='sysvipcwrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sysvipcwrappers.obj `if test -f 'svipc/sysvipcwrappers.cpp'; then $(CYGPATH_W) 'svipc/sysvipcwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/svipc/sysvipcwrappers.cpp'; fi`

timer_create.o: timer/timer_create.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timer_create.o -MD -MP -MF $(DEPDIR)/timer_create.Tpo -c -o timer_create.o `test -f 'timer/timer_create.cpp' || echo '$(srcdir)/'`timer/timer_create.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/timer_create.Tpo $(DEPDIR)/timer_create.Po
#	$(AM_V_CXX)source='timer/timer_create.cpp' object='timer_create.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timer_create.o `test -f 'timer/timer_create.cpp' || echo '$(srcdir)/'`timer/timer_create.cpp

timer_create.obj: timer/timer_create.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timer_create.obj -MD -MP -MF $(DEPDIR)/timer_create.Tpo -c -o timer_create.obj `if test -f 'timer/timer_create.cpp'; then $(CYGPATH_W) 'timer/timer_create.cpp'; else $(CYGPATH_W) '$(srcdir)/timer/timer_create.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/timer_create.Tpo $(DEPDIR)/timer_create.Po
#	$(AM_V_CXX)source='timer/timer_create.cpp' object='timer_create.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timer_create.obj `if test -f 'timer/timer_create.cpp'; then $(CYGPATH_W) 'timer/timer_create.cpp'; else $(CYGPATH_W) '$(srcdir)/timer/timer_create.cpp'; fi`

timerlist.o: timer/timerlist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timerlist.o -MD -MP -MF $(DEPDIR)/timerlist.Tpo -c -o timerlist.o `test -f 'timer/timerlist.cpp' || echo '$(srcdir)/'`timer/timerlist.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/timerlist.Tpo $(DEPDIR)/timerlist.Po
#	$(AM_V_CXX)source='timer/timerlist.cpp' object='timerlist.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timerlist.o `test -f 'timer/timerlist.cpp' || echo '$(srcdir)/'`timer/timerlist.cpp

timerlist.obj: timer/timerlist.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timerlist.obj -MD -MP -MF $(DEPDIR)/timerlist.Tpo -c -o timerlist.obj `if test -f 'timer/timerlist.cpp'; then $(CYGPATH_W) 'timer/timerlist.cpp'; else $(CYGPATH_W) '$(srcdir)/timer/timerlist.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/timerlist.Tpo $(DEPDIR)/timerlist.Po
#	$(AM_V_CXX)source='timer/timerlist.cpp' object='timerlist.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timerlist.obj `if test -f 'timer/timerlist.cpp'; then $(CYGPATH_W) 'timer/timerlist.cpp'; else $(CYGPATH_W) '$(srcdir)/timer/timerlist.cpp'; fi`

timerwrappers.o: timer/timerwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timerwrappers.o -MD -MP -MF $(DEPDIR)/timerwrappers.Tpo -c -o timerwrappers.o `test -f 'timer/timerwrappers.cpp' || echo '$(srcdir)/'`timer/timerwrappers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/timerwrappers.Tpo $(DEPDIR)/timerwrappers.Po
#	$(AM_V_CXX)source='timer/timerwrappers.cpp' object='timerwrappers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timerwrappers.o `test -f 'timer/timerwrappers.cpp' || echo '$(srcdir)/'`timer/timerwrappers.cpp

timerwrappers.obj: timer/timerwrappers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timerwrappers.obj -MD -MP -MF $(DEPDIR)/timerwrappers.Tpo -c -o timerwrappers.obj `if test -f 'timer/timerwrappers.cpp'; then $(CYGPATH_W) 'timer/timerwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/timer/timerwrappers.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/timerwrappers.Tpo $(DEPDIR)/timerwrappers.Po
#	$(AM_V_CXX)source='timer/timerwrappers.cpp' object='timerwrappers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timerwrappers.obj `if test -f 'timer/timerwrappers.cpp'; then $(CYGPATH_W) 'timer/timerwrappers.cpp'; else $(CYGPATH_W) '$(srcdir)/timer/timerwrappers.cpp'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(SCRIPTS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdmtcpdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(d_bindir)/$(am__dirstamp)" || rm -f $(d_bindir)/$(am__dirstamp)
	-test -z "$(d_libdir)/$(am__dirstamp)" || rm -f $(d_libdir)/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libdmtcpPROGRAMS \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libdmtcpPROGRAMS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-dist_binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dist_binSCRIPTS uninstall-libdmtcpPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libdmtcpPROGRAMS \
	clean-noinstLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-binSCRIPTS install-data \
	install-data-am install-dist_binSCRIPTS install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libdmtcpPROGRAMS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dist_binSCRIPTS uninstall-libdmtcpPROGRAMS

.PRECIOUS: Makefile


install-libs: install-libdmtcpPROGRAMS

uninstall-libs: uninstall-libdmtcpPROGRAMS

.PHONY: install-libs uninstall-libs

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
